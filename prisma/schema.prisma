// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Player {
  id        String       @id @default(uuid())
  name      String
  createdAt DateTime     @default(now())
  games     GamePlayer[]
  tokens    Token[]
  diceRolls DiceRoll[]
  tokenMoves TokenMove[] @relation(name: "PlayerTokenMoves")
}

model Game {
  id          String       @id @default(uuid())
  createdBy   String
  status      String
  currentTurn String?
  winnerId    String?
  maxPlayers  Int
  createdAt   DateTime     @default(now())
  players     GamePlayer[]
  tokens      Token[]
  moves       TokenMove[]
  diceRolls   DiceRoll[]
}

model GamePlayer {
  id        String   @id @default(uuid())
  gameId    String
  playerId  String
  color     String
  turnIndex Int
  joinedAt  DateTime @default(now())

  game   Game   @relation(fields: [gameId], references: [id])
  player Player @relation(fields: [playerId], references: [id])
}

model Token {
  id         String   @id @default(uuid())
  gameId     String
  playerId   String
  position   Int
  isFinished Boolean

  game   Game   @relation(fields: [gameId], references: [id])
  player Player @relation(fields: [playerId], references: [id])
  moves  TokenMove[]
}

model TokenMove {
  id           String   @id @default(uuid())
  gameId       String
  playerId     String
  tokenId      String
  fromPos      Int
  toPos        Int
  killedToken  String?
  movedAt      DateTime @default(now())

  game   Game   @relation(fields: [gameId], references: [id])
  player Player @relation(fields: [playerId], references: [id], name: "PlayerTokenMoves")
  token  Token  @relation(fields: [tokenId], references: [id])
}


model DiceRoll {
  id        String   @id @default(uuid())
  gameId    String
  playerId  String
  rollValue Int
  rolledAt  DateTime @default(now())

  game   Game   @relation(fields: [gameId], references: [id])
  player Player @relation(fields: [playerId], references: [id])
}

